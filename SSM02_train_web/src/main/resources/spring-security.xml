<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
					 http://www.springframework.org/schema/beans/spring-beans.xsd
                     http://www.springframework.org/schema/security
                     http://www.springframework.org/schema/security/spring-security.xsd">

    <!--
        intercept-url定义一个过滤规则
        pattern表示对哪些url进行权限控制
        access属性表示在请求对应的url时需要什么权限
        默认配置时它应该是一个以逗号分割的角色列表，请求的用户只需拥有其中的一个角色就能够访问对应的url
    -->
    <!--
        auto-config配置后，不需要在配置下面信息 <security:form-login/>
        定义登录表单信息<security:http-basic/> <security:logout/>
     -->
    <!--配置不过略的资源-->
    <security:http security="none" pattern="/login.jsp"/>
    <security:http security="none" pattern="/index.jsp"/>
    <security:http security="none" pattern="/register.jsp"/>
    <security:http security="none" pattern="/filter.jsp"/>
    <security:http security="none" pattern="/css/**"/>
    <security:http security="none" pattern="/img/**"/>
    <security:http security="none" pattern="/plugins/**"/>

    <security:http auto-config="true" use-expressions="false">
        <security:custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
        <!--配置资料连接，表示任意路径都需要ROLE_USER权限-->
<!--        <security:intercept-url pattern="/**" access="ROLE_USER,ROLE_ADMIN" />-->

        <!--admin-->
<!--        <security:intercept-url pattern="/path/toMain" access="ROLE_ADMIN" />-->
<!--        <security:intercept-url pattern="/product/findAll" access="ROLE_ADMIN" />-->
<!--        <security:intercept-url pattern="/orders/findAll" access="ROLE_ADMIN" />-->
<!--        <security:intercept-url pattern="/user/findAll" access="ROLE_ADMIN" />-->
<!--        <security:intercept-url pattern="/role/findAll" access="ROLE_ADMIN" />-->
<!--        <security:intercept-url pattern="/permission/findAll" access="ROLE_ADMIN" />-->
<!--        <security:intercept-url pattern="/sysLog/findAll" access="ROLE_ADMIN" />-->
<!--        &lt;!&ndash;user&ndash;&gt;-->
<!--        <security:intercept-url pattern="/product/buy" access="ROLE_USER" />-->
<!--        <security:intercept-url pattern="/orders/findByUsername" access="ROLE_USER" />-->

<!--        <security:intercept-url pattern="/user/personalInformation" access="ROLE_USER,ROLE_ADMIN" />-->
<!--        <security:intercept-url pattern="/user/register" access="isAuthenticated()"/>-->
        <!--
            自定义登录页面，login-page
            authentication-failure-url 用户权限失败之后才会跳转到这个界面，如果数据库中没有这个用户就不会跳转
            default-target-url 登录成功后跳转的页面
            注：
               登录页面用户名固定 username, 密码 password, action: login
         -->
        <security:form-login login-page="/login.jsp"
                             login-processing-url="/login"
                             default-target-url="/in.jsp"
                             authentication-failure-url="/filter.jsp"
                             authentication-success-forward-url="/path/toMain"
        />
        <!--
            登出，invalidate-session 是否删除session
            登出处理链接：logout-success-url,登出成功页面
            注：
               登出操作，只需要链接到logout即可登出当前账户
        -->
        <security:logout invalidate-session="true"
                         logout-url="/logout"
                         logout-success-url="/login.jsp"
        />
        <!--关闭CSRE(跨域请求),默认是开启的-->
        <security:csrf disabled="true"/>
    </security:http>

    <!--切换成数据库中的用户名和密码-->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="userService">
            <!--配置加密的方式-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>



    <!--配置加密类-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <bean id="defaultWebSecurityExpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>
    <bean id="filterSecurityInterceptor" class="com.ssm.service.impl.MyFilterSecurityInterceptor">
        <!-- 用户拥有的权限 -->
        <property name="authenticationManager" ref="authenticationManager" />
        <!-- 用户是否拥有所请求资源的权限 -->
        <property name="accessDecisionManager" ref="MyAccessDecisionManager" />
        <!-- 资源与权限对应关系 -->
        <property name="securityMetadataSource" ref="MFilterInvocationSecurityMetadataSource" />
    </bean>

</beans>